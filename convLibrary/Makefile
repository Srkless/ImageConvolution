# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -Isrc -I/usr/include/opencv4
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lopencv_core -lopencv_imgcodecs -lopencv_highgui -lopencv_imgproc
LDDEPS +=
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../bin/Debug-linux-x86_64/convLibrary
TARGET = $(TARGETDIR)/libconvLibrary.so
OBJDIR = ../obj/Debug-linux-x86_64/convLibrary
DEFINES += -DDEBUG -DLOGGING
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g -std=c++20
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib -L/usr/lib64 -m64 -shared -Wl,-soname=libconvLibrary.so

else ifeq ($(config),release)
TARGETDIR = ../bin/Release-linux-x86_64/convLibrary
TARGET = $(TARGETDIR)/libconvLibrary.so
OBJDIR = ../obj/Release-linux-x86_64/convLibrary
DEFINES += -DNDEBUG -DNOSIMD
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -fopenmp -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -std=c++20 -fopenmp -O2
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib -L/usr/lib64 -m64 -shared -Wl,-soname=libconvLibrary.so -s -fopenmp

else ifeq ($(config),releasesimd)
TARGETDIR = ../bin/ReleaseSIMD-linux-x86_64/convLibrary
TARGET = $(TARGETDIR)/libconvLibrary.so
OBJDIR = ../obj/ReleaseSIMD-linux-x86_64/convLibrary
DEFINES += -DNDEBUG -DSIMD
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -fopenmp -mavx2 -O3
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -std=c++20 -fopenmp -mavx2 -O3
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib -L/usr/lib64 -m64 -shared -Wl,-soname=libconvLibrary.so -s -fopenmp

else ifeq ($(config),releasecsimd)
TARGETDIR = ../bin/ReleaseCSIMD-linux-x86_64/convLibrary
TARGET = $(TARGETDIR)/libconvLibrary.so
OBJDIR = ../obj/ReleaseCSIMD-linux-x86_64/convLibrary
DEFINES += -DNDEBUG -DCSIMD
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -O3 -fopenmp -mavx2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -std=c++20 -O3 -fopenmp -mavx2
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib -L/usr/lib64 -m64 -shared -Wl,-soname=libconvLibrary.so -s -fopenmp

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Convolution.o
GENERATED += $(OBJDIR)/Image.o
OBJECTS += $(OBJDIR)/Convolution.o
OBJECTS += $(OBJDIR)/Image.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking convLibrary
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning convLibrary
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Convolution.o: src/Convolution/Convolution.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Image.o: src/Image/Image.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif